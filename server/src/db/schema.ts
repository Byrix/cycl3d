import {
  geometry,
  index,
  integer,
  numeric,
  pgSchema,
  serial,
  timestamp,
  varchar,
} from "drizzle-orm/pg-core";

export const cycl3D = pgSchema("cycl3d");

export const casements = cycl3D.table(
  "casements",
  {
    ufi: integer(),
    pfi: varchar({ length: 10 }).primaryKey().notNull(),
    centroidPfi: varchar("centroid_pfi", { length: 10 }),
    intersection: varchar({ length: 1 }),
    lgaCode: varchar("lga_code", { length: 3 }),
    localityName: varchar("locality_name", { length: 46 }),
    zLevel: varchar("z_level", { length: 2 }),
    taskId: integer("task_id"),
    pfiCreated: timestamp("pfi_created", {
      withTimezone: true,
      mode: "string",
    }),
    ufiOld: integer("ufi_old"),
    ufiCreated: timestamp("ufi_created", {
      withTimezone: true,
      mode: "string",
    }),
    geom: geometry({ type: "multipolygon", srid: 7899 }),
  },
  (table) => [
    index("road_casement_polygon_shape_geom_idx").using(
      "gist",
      table.geom.asc().nullsLast().op("gist_geometry_ops_2d"),
    ),
  ],
);

export const trees = cycl3D.table(
  "trees",
  {
    fullId: varchar("full_id"),
    osmId: varchar("osm_id").primaryKey().notNull(),
    osmType: varchar("osm_type"),
    natural: varchar(),
    website: varchar(),
    "species:mp": varchar("species:mp"),
    "species:es": varchar("species:es"),
    panoramax: varchar(),
    "object:street": varchar("object:street"),
    "object:city": varchar("object:city"),
    health: varchar(),
    diameterCrown: varchar("diameter_crown"),
    crownType: varchar("crown_type"),
    age: varchar(),
    wikipedia: varchar(),
    layer: varchar(),
    bridge: varchar(),
    "contact:webcam": varchar("contact:webcam"),
    type: varchar(),
    waterway: varchar(),
    "species:wikipedia": varchar("species:wikipedia"),
    memorial: varchar(),
    material: varchar(),
    ref: varchar(),
    taxon: varchar(),
    "source:ref": varchar("source:ref"),
    diameter: varchar(),
    level: varchar(),
    backrest: varchar(),
    circumference: varchar(),
    "tower:type": varchar("tower:type"),
    manMade: varchar("man_made"),
    "communication:mobilePhone": varchar("communication:mobile_phone"),
    locked: varchar(),
    access: varchar(),
    "species:wikidata": varchar("species:wikidata"),
    "species:en": varchar("species:en"),
    "genus:wikidata": varchar("genus:wikidata"),
    leafCycle: varchar("leaf_cycle"),
    height: varchar(),
    genus: varchar(),
    checkDate: varchar("check_date"),
    denotation: varchar(),
    "addr:street": varchar("addr:street"),
    wikidata: varchar(),
    startDate: varchar("start_date"),
    species: varchar(),
    "source:description": varchar("source:description"),
    historic: varchar(),
    description: varchar(),
    entrance: varchar(),
    "seamark:light:group": varchar("seamark:light:group"),
    "taxon:family": varchar("taxon:family"),
    leafType: varchar("leaf_type"),
    tourism: varchar(),
    oldName: varchar("old_name"),
    name: varchar(),
    barrier: varchar(),
    highway: varchar(),
    crossing: varchar(),
    leisure: varchar(),
    "seamark:type": varchar("seamark:type"),
    "seamark:light:period": varchar("seamark:light:period"),
    "seamark:light:colour": varchar("seamark:light:colour"),
    "seamark:light:character": varchar("seamark:light:character"),
    publicTransport: varchar("public_transport"),
    ferry: varchar(),
    amenity: varchar(),
    geom: geometry({ type: "multipoint", srid: 4326 }),
  },
  (table) => [
    index("trees_geom_geom_idx").using(
      "gist",
      table.geom.asc().nullsLast().op("gist_geometry_ops_2d"),
    ),
  ],
);

export const lgas = cycl3D.table(
  "lgas",
  {
    lgaCode25: varchar("lga_code25", { length: 5 }).primaryKey().notNull(),
    lgaName25: varchar("lga_name25", { length: 50 }),
    steCode21: varchar("ste_code21", { length: 1 }),
    steName21: varchar("ste_name21", { length: 50 }),
    ausCode21: varchar("aus_code21", { length: 3 }),
    ausName21: varchar("aus_name21", { length: 50 }),
    areasqkm: numeric({ precision: 30, scale: 15 }),
    geom: geometry({ type: "multipolygon", srid: 7844 }),
  },
  (table) => [
    index("lga_2025_aust_gda2020_wkb_geometry_geom_idx").using(
      "gist",
      table.geom.asc().nullsLast().op("gist_geometry_ops_2d"),
    ),
  ],
);

export const highway = cycl3D.table("highway", {
  id: serial().primaryKey().notNull(),
  geom: geometry({ type: "linestring", srid: 4326 }),
  fullId: varchar("full_id"),
  osmId: varchar("osm_id"),
  osmType: varchar("osm_type"),
  highway: varchar(),
  layer: varchar(),
  lit: varchar(),
  footway: varchar(),
  "cycleway:right:lane": varchar("cycleway:right:lane"),
  "cycleway:right": varchar("cycleway:right"),
  "cycleway:left:width": varchar("cycleway:left:width"),
  "cycleway:left:trafficMode:left": varchar("cycleway:left:traffic_mode:left"),
  "cycleway:left:lane": varchar("cycleway:left:lane"),
  "cycleway:left": varchar("cycleway:left"),
  "sidewalk:both": varchar("sidewalk:both"),
  "cycleway:both:lane": varchar("cycleway:both:lane"),
  surface: varchar(),
  "source:maxspeed": varchar("source:maxspeed"),
  oneway: varchar(),
  name: varchar(),
  maxspeed: varchar(),
  "cycleway:both": varchar("cycleway:both"),
});
